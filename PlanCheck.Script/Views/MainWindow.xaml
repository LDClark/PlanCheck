<Window x:Class="PlanCheck.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:cm="clr-namespace:System.ComponentModel;assembly=WindowsBase"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:l="clr-namespace:PlanCheck"
        mc:Ignorable="d"
        Title="PlanCheck"
        Background="Black"
        Foreground="LightGray">
    <Window.Resources>
        <CollectionViewSource x:Key="Plans" Source="{Binding Plans}">
            <CollectionViewSource.GroupDescriptions>
                <PropertyGroupDescription PropertyName="CourseId" />
            </CollectionViewSource.GroupDescriptions>
        </CollectionViewSource>
        <CollectionViewSource x:Key="Constraints" Source="{Binding Constraints}">
            <CollectionViewSource.SortDescriptions>
                <cm:SortDescription PropertyName="ConstraintName" />
            </CollectionViewSource.SortDescriptions>
            <CollectionViewSource.GroupDescriptions>
                <PropertyGroupDescription PropertyName="ConstraintPath" />
            </CollectionViewSource.GroupDescriptions>
        </CollectionViewSource>
    </Window.Resources>
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding StartCommand}" />
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="2*"/>
        </Grid.RowDefinitions>
        <Grid Grid.Row="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="2*"/>
                <ColumnDefinition Width="1*"/>
            </Grid.ColumnDefinitions>
            <Grid Grid.Column="0">
                <Grid >
                    <DockPanel
                        LastChildFill="True">
                        <TextBlock
                            DockPanel.Dock="Top"
                            Text="Plans:"
                            Margin="0,5,0,0"/>
                        <ListBox
                            DockPanel.Dock="Top"
                            ItemsSource="{Binding Source={StaticResource Plans}}"
                            SelectedItem="{Binding SelectedPlan, NotifyOnSourceUpdated=True}"
                            VerticalAlignment="Stretch"
                            Margin="0,5,0,0"    
                            Background="#FF2B2B2B"
                            Foreground="Gray" >
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="SourceUpdated">
                                    <i:InvokeCommandAction Command="{Binding AnalyzePlanCommand}" />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding PlanIdWithFractionation}"/>
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                            <ListBox.GroupStyle>
                                <GroupStyle>
                                    <GroupStyle.HeaderTemplate>
                                        <DataTemplate>
                                            <TextBlock
                                                Text="{Binding Name, StringFormat=Course: \{0\}}"
                                                FontWeight="Bold"
                                                Foreground="Aqua"/>
                                        </DataTemplate>
                                    </GroupStyle.HeaderTemplate>
                                    <GroupStyle.ContainerStyle>
                                        <Style TargetType="GroupItem">
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="GroupItem">
                                                        <StackPanel>
                                                            <ContentPresenter Margin="5,5,0,0" />
                                                            <ItemsPresenter Margin="5,3,5,0"/>
                                                        </StackPanel>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </GroupStyle.ContainerStyle>
                                </GroupStyle>
                            </ListBox.GroupStyle>
                        </ListBox>
                    </DockPanel>
                </Grid>
            </Grid>
            <Grid Grid.Column="1">
                <Grid.RowDefinitions>
                    <RowDefinition Height="20" />
                    <RowDefinition Height="3*" />
                    <RowDefinition Height="20" />
                    <RowDefinition Height="2*" />
                </Grid.RowDefinitions>
                <TextBlock Grid.Row="0" 
                           Text="Collision Checks (CC)"/>
                <Button HorizontalAlignment="Right"
                        Width="30"
                        Content="Run"
                        Command="{Binding AnalyzeCollisionCommand}"
                        IsEnabled="{Binding CCIsEnabled}"
                        Background="#FF2B2B2B"
                        Foreground="LightGray"/>
                <Grid Grid.Row="1">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="37*"/>
                        <ColumnDefinition Width="130*"/>
                        <ColumnDefinition Width="86*"/>
                    </Grid.ColumnDefinitions>
                    <Viewport3D ClipToBounds="True" Grid.ColumnSpan="3">
                        <Viewport3D.Camera>
                            <PerspectiveCamera x:Name="perspectiveCamera" 
                                               Position="{Binding CameraPosition, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                               LookDirection="{Binding LookDir, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                               UpDirection="{Binding UpDir, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                               FieldOfView="69"/>
                        </Viewport3D.Camera>
                        <Viewport3D.Children>
                            <ModelVisual3D Content="{Binding CouchBodyModel, UpdateSourceTrigger=PropertyChanged}"/>
                            <ModelVisual3D Content="{Binding CollimatorModel, UpdateSourceTrigger=PropertyChanged}"/>
                            <ModelVisual3D>
                                <ModelVisual3D>
                                    <ModelVisual3D.Content>
                                        <AmbientLight Color="White" />
                                    </ModelVisual3D.Content>
                                </ModelVisual3D>
                            </ModelVisual3D>
                        </Viewport3D.Children>
                    </Viewport3D>
                </Grid>
                <Grid Grid.Row="2">
                    <Slider Name="SliderBar" 
                            Maximum="180"
                            Minimum="-180"
                            Value="{Binding SliderValue}"
                            TickFrequency="10"
                            IsSnapToTickEnabled="True"
                            TickPlacement="BottomRight"
                            Background="#FF2B2B2B"
                            Foreground="White">
                    </Slider>
                </Grid>
                <Grid Grid.Row="3">
                    <DataGrid
                        Name="CollisionSummaries"
                        ItemsSource="{Binding CollisionSummaries}"
                        IsReadOnly="True"
                        AutoGenerateColumns="True"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Stretch"
                        ColumnWidth="*"
                        Background="Black"
                        Foreground="White"
                        RowBackground="#FF2B2B2B">
                        <DataGrid.RowStyle>
                            <Style TargetType="DataGridRow">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Status}" Value="Collision">
                                        <Setter Property="Background" Value="#FFFFCFB9"></Setter>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Status}" Value="Clear">
                                        <Setter Property="Background" Value="#FFA1DEAC"></Setter>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </DataGrid.RowStyle>
                        <DataGrid.Resources>
                            <Style BasedOn="{StaticResource {x:Type DataGridColumnHeader}}" TargetType="{x:Type DataGridColumnHeader}">
                                <Setter Property="Background" Value="#FF2B2B2B" />
                                <Setter Property="Foreground" Value="White" />
                                <Setter Property="BorderThickness" Value="2,2,2,2"/>
                            </Style>
                        </DataGrid.Resources>
                    </DataGrid>
                </Grid>
            </Grid>
        </Grid>
        <Grid Grid.Row="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="20" />
                <RowDefinition Height="*" />
                <RowDefinition Height="20" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <Grid Grid.Row="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="5*"/>
                    <ColumnDefinition Width="2*"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <TextBlock Grid.Column="0" 
                           Text="Plan Quality Metrics (PQM)" 
                           Grid.ColumnSpan="3"  />
                <ComboBox
                    Grid.Column="1"
                    x:Name="ConstraintComboBox" 
                    ItemsSource="{Binding Source={StaticResource Constraints}}"
                    SelectedItem="{Binding SelectedConstraint, NotifyOnSourceUpdated=True, Mode=TwoWay}"
                    Background="#FF2B2B2B"
                    BorderBrush="Black">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="SourceUpdated">
                            <i:InvokeCommandAction Command="{Binding AnalyzePlanCommand}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding ConstraintName, Mode=TwoWay}" />
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                    <ComboBox.Resources>
                        <Style TargetType="ComboBoxItem">
                            <Setter Property="Background" Value="#FF2B2B2B" />
                            <Setter Property="Foreground" Value="LightGray" />
                            <Setter Property="BorderBrush" Value="Black" />
                        </Style>
                    </ComboBox.Resources>
                </ComboBox>
                <Button Grid.Column="2"
                        Content="Print PDF"
                        VerticalAlignment="Center"
                        Command="{Binding PrintCommand}"
                        Background="#FF2B2B2B"
                        Foreground="LightGray"/>
            </Grid>
            <DataGrid x:Name="pqmDataGrid"
                      EnableRowVirtualization="False"
                      IsReadOnly="True"
                      Grid.Row="1" 
                      AutoGenerateColumns="False"
                      HorizontalAlignment="Stretch"
                      VerticalAlignment="Stretch"
                      ItemsSource="{Binding PQMs,NotifyOnSourceUpdated=True, Mode=TwoWay}"
                      RowHeight="23"
                      ColumnWidth="*"
                      Background="Black"
                      Foreground="LightGray">
                <DataGrid.Columns>
                    <DataGridTextColumn Header="TemplateId" Binding="{Binding TemplateId}" Width="4*"/>
                    <DataGridTemplateColumn Header="FoundStructure" SortMemberPath="Structure.StructureName" Width="5*">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Grid>
                                    <ComboBox x:Name="StructureComboBox"
                                              ItemsSource="{Binding StructureList, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                              FontSize="12"
                                              SelectedItem="{Binding SelectedStructure, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"                                            
                                              Margin="-1"
                                              Background="Black"
                                              >
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="SelectionChanged">
                                                <i:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=DataContext.UpdatePQMCommand}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                        <ComboBox.ItemTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding NameWithCode}" />
                                            </DataTemplate>
                                        </ComboBox.ItemTemplate>
                                    </ComboBox>
                                </Grid>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTextColumn Header="StructVolume" Binding="{Binding StructureVolume, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Width="2*"/>
                    <DataGridTextColumn Header="DVHObjective" Binding="{Binding DVHObjective, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Width="3*"/>
                    <DataGridTextColumn Header="Goal" Binding="{Binding Goal, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsReadOnly="False" Width="*"/>
                    <DataGridTemplateColumn SortMemberPath="AchievedPercentageOfGoal" Width="5*">
                        <DataGridTemplateColumn.Header>
                            <TextBlock Text="Achieved"/>
                        </DataGridTemplateColumn.Header>
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Grid>
                                    <ProgressBar  Foreground="{Binding AchievedColor}"  Value="{Binding AchievedPercentageOfGoal, UpdateSourceTrigger=PropertyChanged}" BorderBrush="{x:Null}" Background="#FF2B2B2B" />
                                    <TextBlock Text="{Binding Achieved, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                    <TextBlock Text="{Binding Met, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Bottom" HorizontalAlignment="Right" FontSize="12" FontWeight="Bold"/>
                                </Grid>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                </DataGrid.Columns>
                <DataGrid.RowStyle>
                    <Style TargetType="DataGridRow">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Path=Met}" Value="Goal">
                                <Setter Property="Background" Value="#FF096119"></Setter>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Path=Met}" Value="Variation">
                                <Setter Property="Background" Value="#FF665D02"></Setter>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Path=Met}" Value="Not met">
                                <Setter Property="Background" Value="#FF6A2100"></Setter>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </DataGrid.RowStyle>
                <DataGrid.Resources>
                    <Style BasedOn="{StaticResource {x:Type DataGridColumnHeader}}" TargetType="{x:Type DataGridColumnHeader}">
                        <Setter Property="Background" Value="#FF2B2B2B" />
                        <Setter Property="Foreground" Value="LightGray" />
                        <Setter Property="BorderBrush" Value="Black"/>
                        <Setter Property="BorderThickness" Value="2,2,2,2"/>
                    </Style>
                </DataGrid.Resources>
            </DataGrid>
            <TextBlock 
                       Grid.Row ="2" 
                       Text="Plan Checks (PC)" />
            <DataGrid x:Name="errorDataGrid"
                      AutoGenerateColumns="False"
                      Grid.Row="3" 
                      HorizontalAlignment="Stretch"
                      VerticalAlignment="Stretch"
                      ItemsSource="{Binding ErrorGrid}"
                      IsReadOnly="True"
                      ColumnWidth="*" 
                      Background="Black"
                      Foreground="LightGray"  
                      RowHeight="23">
                <DataGrid.Columns>
                    <DataGridTextColumn Header="Description" Binding="{Binding Description, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Width="800"/>
                    <DataGridTextColumn Header="Status" Binding="{Binding Status, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Width="*"/>
                    <DataGridTextColumn Header="Severity" Binding="{Binding Severity, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Width="*"/>
                </DataGrid.Columns>
                <DataGrid.RowStyle>
                    <Style TargetType="DataGridRow">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Status}" Value="1 - Warning">
                                <Setter Property="Background" Value="#FF6A2100"></Setter>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Status}" Value="2 - Variation">
                                <Setter Property="Background" Value="#FF665D02"></Setter>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Status}" Value="3 - OK">
                                <Setter Property="Background" Value="#FF096119"></Setter>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </DataGrid.RowStyle>
                <DataGrid.Resources>
                    <Style BasedOn="{StaticResource {x:Type DataGridColumnHeader}}" TargetType="{x:Type DataGridColumnHeader}">
                        <Setter Property="Background" Value="#FF2B2B2B" />
                        <Setter Property="Foreground" Value="LightGray" />
                        <Setter Property="BorderThickness" Value="2,2,2,2"/>
                    </Style>
                </DataGrid.Resources>
            </DataGrid>
        </Grid>
    </Grid>
</Window>
