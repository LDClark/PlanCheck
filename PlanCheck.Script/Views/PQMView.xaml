<UserControl x:Class="PlanCheck.Views.PQMView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:cm="clr-namespace:System.ComponentModel;assembly=WindowsBase"
             xmlns:local="clr-namespace:PlanCheck.Views"
             mc:Ignorable="d"
             Background="Black"
             Foreground="LightGray"
             d:DesignHeight="300" 
             d:DesignWidth="800" 
             >
    <UserControl.Resources>
        <CollectionViewSource x:Key="Constraints" Source="{Binding Constraints}">
            <CollectionViewSource.SortDescriptions>
                <cm:SortDescription PropertyName="ConstraintName" />
            </CollectionViewSource.SortDescriptions>
            <CollectionViewSource.GroupDescriptions>
                <PropertyGroupDescription PropertyName="ConstraintPath" />
            </CollectionViewSource.GroupDescriptions>
        </CollectionViewSource>
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="20" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <Grid Grid.Row="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="5*"/>
                <ColumnDefinition Width="3*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <TextBlock Grid.Column="0" 
                        Text="Plan Quality Metrics (PQM)" 
                        Grid.ColumnSpan="3"  />
            <ComboBox
                Grid.Column="1"
                x:Name="ConstraintComboBox" 
                ItemsSource="{Binding Source={StaticResource Constraints}}"
                SelectedItem="{Binding SelectedConstraint, NotifyOnSourceUpdated=True, Mode=TwoWay}"
                Background="#FF2B2B2B"
                BorderBrush="Black">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="SourceUpdated">
                        <i:InvokeCommandAction Command="{Binding AnalyzePlanCommand}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
                <ComboBox.ItemTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding ConstraintName, Mode=TwoWay}" />
                    </DataTemplate>
                </ComboBox.ItemTemplate>
                <ComboBox.Resources>
                    <Style TargetType="ComboBoxItem">
                        <Setter Property="Background" Value="#FF2B2B2B" />
                        <Setter Property="Foreground" Value="LightGray" />
                        <Setter Property="BorderBrush" Value="Black" />
                    </Style>
                </ComboBox.Resources>
            </ComboBox>
            <Button Grid.Column="2"
                    Content="Print PDF"
                    VerticalAlignment="Center"
                    Command="{Binding PrintCommand}"
                    Background="#FF2B2B2B"
                    Foreground="LightGray"/>
        </Grid>
        <DataGrid x:Name="pqmDataGrid"
                    EnableRowVirtualization="False"
                    IsReadOnly="True"
                    Grid.Row="1" 
                    AutoGenerateColumns="False"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Stretch"
                    ItemsSource="{Binding PQMs,NotifyOnSourceUpdated=True, Mode=TwoWay}"
                    RowHeight="23"
                    ColumnWidth="*"
                    Background="Black"
                    Foreground="LightGray">
            <DataGrid.Columns>
                <DataGridTextColumn Header="TemplateId" Binding="{Binding TemplateId}" Width="4*"/>
                <DataGridTemplateColumn Header="FoundStructure" SortMemberPath="Structure.StructureName" Width="5*">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Grid>
                                <ComboBox x:Name="StructureComboBox"
                                            ItemsSource="{Binding StructureList, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                            FontSize="12"
                                            SelectedItem="{Binding SelectedStructure, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"                                            
                                            Margin="-1"
                                            Background="Black"
                                            >
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="SelectionChanged">
                                            <i:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=DataContext.UpdatePQMCommand}"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                    <ComboBox.ItemTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding NameWithCode}" />
                                        </DataTemplate>
                                    </ComboBox.ItemTemplate>
                                </ComboBox>
                            </Grid>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTextColumn Header="Volume" Binding="{Binding StructureVolume, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Width="*"/>
                <DataGridTextColumn Header="DVHObjective" Binding="{Binding DVHObjective, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Width="2*"/>
                <DataGridTextColumn Header="Goal" Binding="{Binding Goal, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsReadOnly="False" Width="*"/>
                <DataGridTemplateColumn SortMemberPath="AchievedPercentageOfGoal" Width="3*">
                    <DataGridTemplateColumn.Header>
                        <TextBlock Text="Achieved"/>
                    </DataGridTemplateColumn.Header>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Grid>
                                <ProgressBar  Foreground="{Binding AchievedColor}"  Value="{Binding AchievedPercentageOfGoal, UpdateSourceTrigger=PropertyChanged}" BorderBrush="{x:Null}" Background="#FF2B2B2B" />
                                <TextBlock Text="{Binding Achieved, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                <TextBlock Text="{Binding Met, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Bottom" HorizontalAlignment="Right" FontSize="12" FontWeight="Bold"/>
                            </Grid>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>
            <DataGrid.RowStyle>
                <Style TargetType="DataGridRow">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Path=Met}" Value="Goal">
                            <Setter Property="Background" Value="#FF096119"></Setter>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=Met}" Value="Variation">
                            <Setter Property="Background" Value="#FF665D02"></Setter>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=Met}" Value="Not met">
                            <Setter Property="Background" Value="#FF6A2100"></Setter>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.RowStyle>
            <DataGrid.Resources>
                <Style BasedOn="{StaticResource {x:Type DataGridColumnHeader}}" TargetType="{x:Type DataGridColumnHeader}">
                    <Setter Property="Background" Value="#FF2B2B2B" />
                    <Setter Property="Foreground" Value="LightGray" />
                    <Setter Property="BorderBrush" Value="Black"/>
                    <Setter Property="BorderThickness" Value="2,2,2,2"/>
                </Style>
            </DataGrid.Resources>
        </DataGrid>
    </Grid>
</UserControl>
